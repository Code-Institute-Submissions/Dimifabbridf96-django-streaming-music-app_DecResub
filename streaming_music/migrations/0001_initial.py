# Generated by Django 3.2.16 on 2022-11-16 13:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True)),
                ('created_on', models.DateField(auto_now=True)),
                ('genre', models.CharField(max_length=20)),
                ('image', models.ImageField(default='https://streaming-music-app.s3.eu-west-1.amazonaws.com/static/image/spotiflix.jpg', upload_to='django-image/')),
                ('description', models.TextField(default='description')),
                ('artist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='album_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True)),
                ('artist_name', models.CharField(max_length=40)),
                ('artist_surname', models.CharField(max_length=30)),
                ('uploaded_on', models.DateTimeField(auto_now=True)),
                ('approved', models.BooleanField(default=False)),
                ('file', models.FileField(default='song', upload_to='media/')),
                ('album', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='album', to='streaming_music.album')),
                ('likes', models.ManyToManyField(blank=True, related_name='song_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['uploaded_on'],
                'unique_together': {('artist_name', 'artist_surname')},
            },
        ),
    ]
